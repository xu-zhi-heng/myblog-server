<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sweetfun.dao.BlogOperationsDao">
    <resultMap id="BaseResultMap" type="com.sweetfun.domain.BlogIntroduction">
        <id column="id" jdbcType="INTEGER" property="id"></id>
        <result column="title" jdbcType="VARCHAR" property="title"></result>
        <result column="digest" jdbcType="VARCHAR" property="digest"></result>
        <result column="picture" jdbcType="VARCHAR" property="picture"></result>
        <result column="viewed_num" jdbcType="INTEGER" property="viewedNum"></result>
        <result column="thumb_num" jdbcType="INTEGER" property="thumbNum"></result>
        <result column="comment_num" jdbcType="INTEGER" property="commentNum"></result>
        <result column="icon" jdbcType="VARCHAR" property="icon"></result>
        <result column="type" jdbcType="INTEGER" property="type"></result>
    </resultMap>

    <sql id="Base_Column_List">
        select id,title,digest,picture,viewed_num,thumb_num,comment_num,icon,type
    </sql>

    <update id="giveALike" parameterType="java.lang.Integer">
        update myblog.blog_introduction
        set thumb_num = thumb_num + 1
        where id = #{blogId}
    </update>

    <update id="viewNumAdd" parameterType="java.lang.Integer">
        update myblog.blog_introduction
        set viewed_num = viewed_num + 1
        where id = #{blogId}
    </update>

    <select id="Statistics" resultType="java.util.HashMap">
        select sum(viewed_num) as viewNum,
        sum(thumb_num) as thumbNum,
        sum(comment_num) as commentNum,
        count(*) as blogNum
        from myblog.blog_introduction
    </select>

    <select id="blogNumByType" resultType="java.util.HashMap">
        SELECT blogType.name, COUNT(intro.id) AS value
        FROM myblog.blog_introduction AS intro
        INNER JOIN myblog.blog_type AS blogType
        ON intro.type = blogType.id
        GROUP BY intro.type ORDER BY intro.type;
    </select>


    <select id="BlogViewRanking" resultType="java.util.HashMap">
        select id, title, viewed_num, thumb_num
        from myblog.blog_introduction
        order by viewed_num
    </select>

    <select id="RecentBlogs" resultType="java.util.HashMap">
        select title as content, create_time as time
        from myblog.blog_content
        order by create_time DESC
    </select>


    <select id="getBlogNumberByDay" resultType="java.util.HashMap">
        select d.date, IFNULL(T.count,0) count from
            (
            select date_sub(curdate(),INTERVAL WEEKDAY(curdate()) + 0 DAY) as date
            UNION ALL
            select date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 1 DAY) as date
            UNION ALL
            select date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 2 DAY) as date
            UNION ALL
            select date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 3 DAY) as date
            UNION ALL
            select date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 4 DAY) as date
            UNION ALL
            select date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 5 DAY) as date
            UNION ALL
            select date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 6 DAY) as date
            )  d
            left join
            (
            select create_time, count(id) as count
            from blog_content
            group by create_time
            ) T
        on T.create_time = d.date
        GROUP BY d.date;
    </select>
</mapper>